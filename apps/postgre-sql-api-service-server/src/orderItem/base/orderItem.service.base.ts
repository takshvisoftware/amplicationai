/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  OrderItem as PrismaOrderItem,
  Order as PrismaOrder,
  Product as PrismaProduct,
} from "@prisma/client";

export class OrderItemServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OrderItemCountArgs, "select">
  ): Promise<number> {
    return this.prisma.orderItem.count(args);
  }

  async orderItems(
    args: Prisma.OrderItemFindManyArgs
  ): Promise<PrismaOrderItem[]> {
    return this.prisma.orderItem.findMany(args);
  }
  async orderItem(
    args: Prisma.OrderItemFindUniqueArgs
  ): Promise<PrismaOrderItem | null> {
    return this.prisma.orderItem.findUnique(args);
  }
  async createOrderItem(
    args: Prisma.OrderItemCreateArgs
  ): Promise<PrismaOrderItem> {
    return this.prisma.orderItem.create(args);
  }
  async updateOrderItem(
    args: Prisma.OrderItemUpdateArgs
  ): Promise<PrismaOrderItem> {
    return this.prisma.orderItem.update(args);
  }
  async deleteOrderItem(
    args: Prisma.OrderItemDeleteArgs
  ): Promise<PrismaOrderItem> {
    return this.prisma.orderItem.delete(args);
  }

  async getOrder(parentId: string): Promise<PrismaOrder | null> {
    return this.prisma.orderItem
      .findUnique({
        where: { id: parentId },
      })
      .order();
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.orderItem
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
